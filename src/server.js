import React from 'react';
import assign from 'react/lib/Object.assign';
import { renderToString } from 'react-dom/server';
import { match } from 'react-router';
import AsyncProps, { loadPropsOnServer } from 'async-props';
import Helmet from 'react-helmet';
import Html from './components/Html';

export default (routes) => {

  if (!routes) {
    throw new Error('Routes must be provided.');
  }

  return function middleware(req, res, next) {

    match({ routes, location: req.url }, (err, redirect, renderProps) => {

      if (err) {
        return next(err);
      }

      let title = {};

      loadPropsOnServer(renderProps, (err, asyncProps) => {
        if (err) {
          return next(err);
        }

        if (__DEVELOPMENT__) {
          webpackIsomorphicTools.refresh();
        }

        const html = renderToString(
          <AsyncProps {...renderProps} {...asyncProps} />
        );

        // Grab the <head> meta data generated by rendered components
        const head = Helmet.rewind();

        const assets = webpackIsomorphicTools.assets();

        const renderedPage = renderToString(
          <Html assets={assets} head={head} content={html} asyncProps={asyncProps} />
        );

        res.send(`<!DOCTYPE html>${renderedPage}`);
      });

    });
  };
};
